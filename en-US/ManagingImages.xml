<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Users_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="ManagingImages">
<title>Managing Images</title>
<para>
In a cloud environment, Virtual Machines are instantiated from images. These 
images are registered in an Image Management Service, in our case provided by 
the Glance OpenStack component. 
</para>

<section id="PublicImages">
<title>Public Images</title>
<para>
Some images in the Cloud Area Padovana are provided by the Cloud 
administrators. These images are public, and visible to all users.
They appear in the <menuchoice><guimenu>Public</guimenu></menuchoice> 
tab of the <menuchoice><guimenu>Images &amp; Snapshots</guimenu></menuchoice> 
menu.
</para>

<para>
The <literal>SL65-x86-64-&lt;date&gt;-&lt;format&gt;</literal> is a basic SL6.5 image which
also includes cloud-init to perform contextualization based on the user data 
specified when the VM are instantiated. It also configures CVMFS and the
relevant squid servers.
</para>

<para>
The <literal>SL65-x86-64-&lt;date&gt;-&lt;format&gt;</literal> image, wrt the
<literal>SL65-x86-64-&lt;date&gt;-&lt;format&gt;</literal> image, also configures the
Padova LDAP server for user authentication. This means that it is just 
necessary to “enable” the relevant accounts on the VM adding in the 
/etc/passwd file:

<screen>
+name1::::::
+name2::::::
...
</screen>
and creating their home directories.
</para>

<para>
Changes done in /etc/passwd could not be applied immediately by the system. 
In this case a:

<screen>
nscd -i passwd
</screen>

should help.
</para>
 
<para>
These SL 6.5 images are provided in two formats: QCOW2 and AMI.
</para>

<para>
Images in QCOW2 format are smaller (and are therefore better) wrt AMI images. 
However they are not fully resizable with respect the disk size. This means 
that if you instantiate a VM using a QCOW2 image selecting e.g. the
m1.medium flavor, that VM will have a small root partition and not the
expected 40 GB size. This can be fixed logging to the VM as root and 
first of all checking what is the device associated to the root partition:
</para>

<screen>
# df -h /
Filesystem      Size  Used Avail Use% Mounted on
/dev/vda1       3.0G  2.5G  322M  89% /
</screen>

<para>
If it is <replaceable>/dev/vda1</replaceable> as in the this example, as
root perform:
</para>

<screen>
growpart /dev/vda 1
reboot
</screen>

<para>
Use <command>growpart /dev/vda 2</command> if the device was instead 
<replaceable>/dev/vda2</replaceable>, etc.
</para>

<para>
When the machine re-starts, it will have the expected (i.e. compliant
with the selected flavor) disk size.
</para>


<para>
Images in AMI format are much bigger wrt QCOW2 images.   
They are fully resizable with respect the disk size (i.e. they don't have
the problem described above for QCOW2 images). However on a VM 
using an AMI image it is not possible to update the kernel.
</para>

</section>

<section id="UserProvidedImages">
<title>User Provided Images</title>
<para>
Along with the standard images, users can provide their own images
and upload them to the Cloud Image service:
these images are private, meaning that they are only available to the users 
of the projects they are uploaded for.
</para>

<para>
Many open source projects such as Ubuntu and Fedora now produce pre-build 
images which can be used for certain clouds. If these are available, it is 
much easier to use these compared to building your own.

<itemizedlist>
<listitem><para><ulink url="http://cloud.fedoraproject.org/">Fedora repository</ulink></para></listitem> 
<listitem><para><ulink url="http://uec-images.ubuntu.com/">Ubuntu repository</ulink></para></listitem> 

</itemizedlist>

</para>

<para>
Building your own images is also possible, as described in the 
<link linkend="BuildingImages">relevant section</link>.
</para>

<para>
Taking an example of the Ubuntu image, after having downloaded the
image from the relevant web site, to upload such image 
(using the command line tools) it is necessary first of all to 
authenticate to OpenStack using the openrc source, and then the
following command must be issued:

<screen>
glance image-create --name=ubuntu-trusty --disk-format=qcow2 \
--container-format=bare --property hypervisor_type=qemu \
--file trusty-server-cloudimg-amd64-disk1.img
</screen>

Once loaded, the image can then be used to create virtual machines. 
</para>

<para>
Some system software is delivered in ISO image format. 
For example, these steps show how to create an image from the Freedos ISO 
available at http://www.freedos.org/download/and downloaded to fd11src.iso:

<screen>
glance image-create --name freedos11 --disk-format=iso \
--container-format=bare --file=fd11src.iso
</screen>
</para>

<warning><para>
No backup is currently done on user provided images and on snapshots.
Therefore users with private images should keep a copy of the images they 
have uploaded in their private archives. 
</para></warning>

</section>



<section id="SharingImages">
<title>Sharing Images</title>
<para>
Images can be shared between different projects. This is currently only
possible via the command line tools.
</para>

<para>
If an image had been uploaded to your currently active project, such as 
described in 
<link linkend="UserProvidedImages">User Defined Images section</link>, 
you can then use the <command>glance member-create</command> operations to 
share that image with another project.
For example, to share an image, first source the project profile for the 
project containing the image you want to share and find its id with
the <command>glance image-show</command> command
(<replaceable>e0d35322-d509-4202-9b40-7d74e7aca0b6</replaceable> in the 
example):

<screen>
$ glance image-show ubuntu-trusty
+----------------------------+--------------------------------------+
| Property                   | Value                                |
+----------------------------+--------------------------------------+
| Property 'hypervisor_type' | qemu                                 |
| checksum                   | 2538873a402068e7c48ba5e0b896d222     |
| container_format           | bare                                 |
| created_at                 | 2014-10-25T05:06:13                  |
| deleted                    | False                                |
| disk_format                | qcow2                                |
| id                         | e0d35322-d509-4202-9b40-7d74e7aca0b6 |
| is_public                  | False                                |
| min_disk                   | 0                                    |
| min_ram                    | 0                                    |
| name                       | ubuntu-trusty                        |
| owner                      | beaeede3841b47efb6b665a1a667e5b1     |
| protected                  | False                                |
| size                       | 255853056                            |
| status                     | active                               |
| updated_at                 | 2014-10-25T05:07:01                  |
+----------------------------+--------------------------------------+
</screen>

</para>

<para>
You now need to find the id of the project you wish to share the image with. 
This will generally be done by looking at the openrc file of that project and 
finding the <literal>OS_TENANT_ID</literal> variable (in this example, it is 
65bf648d-8d07-48af-8c3a-fa162a5b283f).
</para>

<para>
Using this tenant ID as an argument on the command line of 
<command>member-create</command>, the image 
(<replaceable>e0d35322-d509-4202-9b40-7d74e7aca0b6></replaceable>
in this example) can then be shared:

<screen>
glance  member-create e0d35322-d509-4202-9b40-7d74e7aca0b6 65bf648d-8d07-48af-8c3a-fa162a5b283f # share it
 
glance member-list --image-id e0d35322-d509-4202-9b40-7d74e7aca0b6 # check it is shared
</screen>

You should then have the image visible in the target project.
</para>

</section>

<section id="BuildingImages">
<title>Building Images</title>
<para>
TBD
</para>


<section id="EnablingINFNPadovaLDAP">
<title>Enabling INFN Padova LDAP based authentication on the Virtual Machine</title>

<para>
It is possible to refer to the INFN Padova's LDAP section for user 
authentication on the VMs of the Cloud.

To do that, the following LDAP client configurations, targeted to SL6.x 
systems, need to be available on the image used to start the VMs. 
</para>

<para>
First of all, the following packages must be installed:

<itemizedlist>
<listitem><para>openssl</para></listitem>
<listitem><para>openldap</para></listitem>
<listitem><para>openldap-clients</para></listitem>
<listitem><para>pam-ldap</para></listitem>
<listitem><para>nss-pam-ldapd</para></listitem>
<listitem><para>nss-tools</para></listitem>
<listitem><para>nscd</para></listitem>

</itemizedlist>

</para>

<para>
Then the following files (included in this
<ulink url="https://wiki.infn.it/_media/progetti/cloud-areapd/user_s_guides/ldap.tar">ldap.tar</ulink>
tar file) must be 
installed on the Virtual Machine:

<itemizedlist>

<listitem><para>/etc/openldap/cacerts/cacert.pem</para></listitem>
<listitem><para>/etc/openldap/ldap.conf</para></listitem>
<listitem><para>/etc/pam_ldap.conf</para></listitem>
<listitem><para>/etc/nsswitch.conf</para></listitem>
<listitem><para>/etc/nslcd.conf</para></listitem>
<listitem><para>/etc/pam.d/system-auth-ac</para></listitem>
<listitem><para>/etc/pam.d/password-auth-ac</para></listitem>
</itemizedlist>

</para>
<para>

To do that, it is enough to log on the VM and:

<screen>
cd /
tar xvf / path/ldap.tar
</screen>

</para>

<para>
Then it is necessary to start the nslcd and nscd services:

<screen>
service nslcd start
service nscd start
chkconfig nslcd on
chkconfig nscd on
</screen>
</para>

<para>
Then it is just necessary to “enable” the relevant accounts on the VM adding 
in the /etc/passwd file:

<screen>
+name1::::::
+name2::::::
...
</screen>
and creating their home directories.
</para>

<para>
Changes done in /etc/passwd could not be applied immediately by the system. 
In this case a:

<screen>
nscd -i passwd
should help.
</screen>

</para>

<note><para>
Please note that the images <literal>SL65-Padova-x86-64-&lt;date&gt;</literal>
have already the LDAP client 
properly configured. Using these images it is just necessary to enable the 
relevant users in /etc/passwd and create their home directories.
</para></note>

</section>



</section>



<section id="MigratingUsingImages">
<title>Migrating using images</title>
<para>
TBD
</para>

</section>

</chapter>
